import { LearningSytem } from '../lib/ai/learning-system';

/**
 * üé¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –°–ê–ú–û–û–ë–£–ß–ï–ù–ò–Ø
 *
 * –ó–∞–ø—É—Å–∫: bun run src/scripts/demo-learning.ts
 */

async function demonstrateLearningSystem() {
  console.clear();
  console.log('üß† –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –°–ê–ú–û–û–ë–£–ß–ï–ù–ò–Ø AI –ü–†–û–î–ê–ñ–ù–ò–ö–ê SOINTERA\n');

  const learningSystem = new LearningSytem();

  try {
    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    console.log('üöÄ 1. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    await learningSystem.initialize();
    console.log('');

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö
    console.log('üìä 2. –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–ï–ú–û-–î–ê–ù–ù–´–•');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    await generateDemoData(learningSystem);
    console.log('');

    // 3. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('üìà 3. –ê–ù–ê–õ–ò–ó –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    const summary = await learningSystem.getPerformanceSummary();
    console.log('–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:');
    console.log(`‚Ä¢ –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏: ${summary.summary.totalVisitors}`);
    console.log(`‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è: ${summary.summary.overallConversion}`);
    console.log(`‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö A/B —Ç–µ—Å—Ç–æ–≤: ${summary.summary.activeABTests}`);
    console.log('');

    // 4. –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
    console.log('üß™ 4. –ó–ê–ü–£–°–ö A/B –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–û–í');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    const greetingTest = await learningSystem.startExperiment('greeting');
    console.log(`‚úÖ –ó–∞–ø—É—â–µ–Ω —Ç–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: ${greetingTest}`);

    const pricingTest = await learningSystem.startExperiment('pricing');
    console.log(`‚úÖ –ó–∞–ø—É—â–µ–Ω —Ç–µ—Å—Ç —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ${pricingTest}`);
    console.log('');

    // 5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    console.log('üí° 5. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    const quickActions = await learningSystem.quickActions();
    const insights = await quickActions.getTopInsights();

    if (insights.length > 0) {
      insights.forEach((insight, i) => {
        console.log(`${i + 1}. ${insight.title}`);
        console.log(`   üí∞ –≠—Ñ—Ñ–µ–∫—Ç: ${insight.expectedImpact}`);
        console.log(`   üéØ –î–µ–π—Å—Ç–≤–∏–µ: ${insight.recommendation}`);
        console.log('');
      });
    } else {
      console.log('–°–∏—Å—Ç–µ–º–∞ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...');
      console.log('');
    }

    // 6. –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞
    console.log('üìã 6. –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    const dailySummary = await learningSystem.getDailySummary();
    console.log(dailySummary);

    // 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    console.log('‚ö° 7. –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –æ–±—É—á–µ–Ω–∏—è...');
    const learningResult = await quickActions.runLearningCycle();
    console.log(learningResult);

    console.log('üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫...');
    const bestPractices = await quickActions.applyBestPractices();
    console.log(`‚ú® –ù–∞–π–¥–µ–Ω–æ ${bestPractices.foundInsights} –≤—ã—Å–æ–∫–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    console.log('');

    // 8. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
    console.log('üéâ 8. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log('');
    console.log('üß† –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´:');
    console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –ø–æ –∫–∞–∂–¥–æ–º—É –¥–∏–∞–ª–æ–≥—É');
    console.log('‚Ä¢ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –ø–æ–¥—Ö–æ–¥–æ–≤');
    console.log('‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂');
    console.log('‚Ä¢ –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ–≤–µ–¥–µ–Ω–∏—é');
    console.log('‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é');
    console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤–æ—Ä–æ–Ω–∫–∏');
    console.log('');
    console.log('üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —É—á–∏—Ç—å—Å—è –Ω–∞ –∫–∞–∂–¥–æ–º –¥–∏–∞–ª–æ–≥–µ');
    console.log('2. A/B —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∂—É—Ç –ª—É—á—à–∏–µ –ø–æ–¥—Ö–æ–¥—ã');
    console.log('3. AI –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ª—É—á—à–∞—Ç—å—Å—è');
    console.log('4. –ö–æ–Ω–≤–µ—Ä—Å–∏—è –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
async function generateDemoData(learningSystem: LearningSytem) {
  const analytics = learningSystem.getAnalytics();

  // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Å—Å–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤
  const demoCustomers = [
    { id: 'demo_customer_1', stage: 'qualification', outcome: 'progression' },
    { id: 'demo_customer_2', stage: 'presentation', outcome: 'interested' },
    { id: 'demo_customer_3', stage: 'pricing', outcome: 'objection' },
    { id: 'demo_customer_4', stage: 'closing', outcome: 'conversion' },
    { id: 'demo_customer_5', stage: 'qualification', outcome: 'dropout' }
  ];

  for (const customer of demoCustomers) {
    const sessionId = await analytics.startSession(customer.id, `conv_${customer.id}`);

    await analytics.trackFunnelProgress(
      customer.id,
      `conv_${customer.id}`,
      customer.stage,
      { outcome: customer.outcome }
    );

    if (customer.outcome === 'conversion') {
      await analytics.trackConversionEvent({
        customerId: customer.id,
        conversationId: `conv_${customer.id}`,
        stage: 'conversion',
        action: 'purchase',
        courseInterest: '–§—É–Ω–¥–∞–º–µ–Ω—Ç',
        value: 39000
      });
    }

    await analytics.endSession(customer.id, customer.outcome);
  }

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è 5 –∫–ª–∏–µ–Ω—Ç–æ–≤');
  console.log('üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –º–µ—Ç—Ä–∏–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏');
  console.log('üéØ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–æ–±—ã—Ç–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏');
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
if (require.main === module) {
  demonstrateLearningSystem()
    .then(() => {
      console.log('\nüé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
      process.exit(0);
    })
    .catch(error => {
      console.error('üí• –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      process.exit(1);
    });
}
