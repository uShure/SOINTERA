#!/usr/bin/env tsx

import { FreeVoiceService } from '../lib/voice/free-voice-service';
import { SOINTERA_VOICE_CONFIG, VoiceConfigUtils } from '../lib/voice/voice-config';

/**
 * üé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ SOINTERA AI
 */

async function testVoiceService() {
  console.log('üé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ SOINTERA AI...\n');

  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ë–ï–°–ü–õ–ê–¢–ù–û–ì–û –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (eSpeak + Whisper)
    const voiceService = new FreeVoiceService();
    
    console.log('‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    console.log('\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (eSpeak/Whisper/FFmpeg)...');
    const availability = await voiceService.checkAvailability();
    console.log(`  - eSpeak-ng (TTS): ${availability.espeak ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
    console.log(`  - Whisper (STT): ${availability.whisper ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
    console.log(`  - FFmpeg: ${availability.ffmpeg ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
    if (!(availability.espeak && availability.whisper && availability.ffmpeg)) {
      throw new Error('–ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã');
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ eSpeak
    console.log('\nüìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ eSpeak...');
    const voices = await voiceService.getAvailableVoices();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${voices.length} –≥–æ–ª–æ—Å–æ–≤ (—Ñ–∏–ª—å—Ç—Ä ru):`);
    voices.slice(0, 5).forEach(voice => console.log(`  - ${voice}`));

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log('\n‚öôÔ∏è –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:');
    console.log(`  - –û—Å–Ω–æ–≤–Ω–æ–π –≥–æ–ª–æ—Å: ${SOINTERA_VOICE_CONFIG.defaultVoice}`);
    console.log(`  - –Ø–∑—ã–∫: ${SOINTERA_VOICE_CONFIG.defaultLanguage}`);
    console.log(`  - –°–∫–æ—Ä–æ—Å—Ç—å: ${SOINTERA_VOICE_CONFIG.defaultSpeed}`);
    console.log(`  - –¢–æ–Ω: ${SOINTERA_VOICE_CONFIG.defaultPitch}`);

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    console.log('\nüë• –¢–µ—Å—Ç 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤...');
    const customerTypes = ['beginner', 'experienced', 'interested', 'ready_to_buy'] as const;
    
    customerTypes.forEach(type => {
      const settings = VoiceConfigUtils.getCustomerVoice(type);
      console.log(`  - ${type}: ${settings.voice}, —Å–∫–æ—Ä–æ—Å—Ç—å: ${settings.speed}, —Ç–æ–Ω: ${settings.pitch}`);
    });

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤
    console.log('\nüé≠ –¢–µ—Å—Ç 5: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥–æ–ª–æ—Å–∞...');
    const emotions = ['friendly', 'professional', 'enthusiastic', 'calm'] as const;
    
    emotions.forEach(emotion => {
      const settings = VoiceConfigUtils.getEmotionalVoice(emotion);
      console.log(`  - ${emotion}: ${settings.voice}, —Å–∫–æ—Ä–æ—Å—Ç—å: ${settings.speed}, —Ç–æ–Ω: ${settings.pitch}`);
    });

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('\nüìù –¢–µ—Å—Ç 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    const contentTypes = ['greeting', 'courseDescription', 'pricing', 'technical'] as const;
    
    contentTypes.forEach(type => {
      const settings = VoiceConfigUtils.getContentVoice(type);
      console.log(`  - ${type}: ${settings.voice}, —Å–∫–æ—Ä–æ—Å—Ç—å: ${settings.speed}, —Ç–æ–Ω: ${settings.pitch}`);
    });

    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Telegram
    console.log('\nüì± –¢–µ—Å—Ç 7: –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Telegram...');
    const testSettings = SOINTERA_VOICE_CONFIG.customerVoices.beginner;
    const isCompatible = VoiceConfigUtils.isTelegramCompatible(testSettings);
    console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å Telegram: ${isCompatible}`);

    // –¢–µ—Å—Ç 8: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('\nüîß –¢–µ—Å—Ç 8: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const optimizedSettings = VoiceConfigUtils.optimizeForQuality(testSettings);
    console.log('‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
    console.log(`  - –°–∫–æ—Ä–æ—Å—Ç—å: ${testSettings.speed} ‚Üí ${optimizedSettings.speed}`);
    console.log(`  - –¢–æ–Ω: ${testSettings.pitch} ‚Üí ${optimizedSettings.pitch}`);
    console.log(`  - –ì—Ä–æ–º–∫–æ—Å—Ç—å: ${testSettings.volume || 1.0} ‚Üí ${optimizedSettings.volume}`);

    // –¢–µ—Å—Ç 9: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ —Å eSpeak
    console.log('\nüé§ –¢–µ—Å—Ç 9: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ —Å eSpeak...');
    const demoText = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ —Ç–µ—Å—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –°–æ–∏–Ω—Ç–µ—Ä–∞.';
    const ttsBuffer = await voiceService.textToSpeech(demoText, { voice: 'ru', language: 'ru' });
    console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞—É–¥–∏–æ –±–∞–π—Ç: ${ttsBuffer.length}`);

    // –¢–µ—Å—Ç 10: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ –¥–ª—è Telegram
    console.log('\nüéµ –¢–µ—Å—Ç 10: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ –¥–ª—è Telegram...');
    const optimized = await voiceService.optimizeForTelegram(ttsBuffer);
    console.log(`‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∞—É–¥–∏–æ –±–∞–π—Ç: ${optimized.length}`);

    // –¢–µ—Å—Ç 11: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    console.log('\nüìä –¢–µ—Å—Ç 11: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...');
    const stats = voiceService.getStats();
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:');
    console.log(`  - –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: ${stats.tempDir}`);
    console.log(`  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${stats.tempFilesCount}`);

    // –¢–µ—Å—Ç 12: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    console.log('\nüßπ –¢–µ—Å—Ç 12: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
    await voiceService.cleanup();
    console.log('‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã');

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüöÄ –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('\nüìñ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–º. VOICE_SETUP.md');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:', error);
    console.log('\nüîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('  1. –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω eSpeak-ng/ffmpeg/whisper');
    console.log('  2. –ü—Ä–æ–±–ª–µ–º—ã —Å PATH –∏–ª–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞');
    console.log('\nüìñ –°–º. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: VOICE_SETUP_FREE.md');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testVoiceService().catch(console.error);
